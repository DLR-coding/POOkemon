@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml
hide empty members


package Game
{
    package Elements
    {

        class Element <<Interface>>
            {
                + getElmt() : String
                + getFortContre(): String
                + getFaibleContre() : String
            }

        class Terre implements Element
            {
                + getElmt() : String
                + getFortContre(): String
                + getFaibleContre() : String
            }

        class Eau implements Element
            {
                + getElmt() : String
                + getFortContre(): String
                + getFaibleContre() : String
            }

        class Feu implements Element
            {
                + getElmt() : String
                + getFortContre(): String
                + getFaibleContre() : String
            }

        class Air implements Element
            {
                + getElmt() : String
                + getFortContre(): String
                + getFaibleContre() : String
            }
    }

    package EnsemblePokemon
    {
        class EnsemblePokemon <<Interface>>
                        {
                            + ajouterPokemon(pokemon:Pokemon)
                            + getPokemon(index:Integer):Pokemon
                            + afficher()
                            + retirerPokemon((pokemon:Pokemon)
                        }
        class  ListePokemon <<static>>
        {
            - {static} listeNomsPokemon : String[*]
            + {static} genererPokemon()

        }
        class Defausse implements EnsemblePokemon
            {
                - m_defausse : Pokemon[*]
                + <<Create>> Defausse()
                + ajouterPokemon(pokemon:Pokemon)
                + getPokemon(index:Integer):Pokemon
                + retirerPokemon((pokemon:Pokemon)
                + afficher()
            }

        class MainDuJoueur implements EnsemblePokemon
            {
                - m_mainJoueur: Pokemon[5]
                + <<Create>> MainDuJoueur()
                + ajouterPokemon(pokemon:Pokemon)
                + getPokemon(index:Integer):Pokemon
                + retirerPokemon((pokemon:Pokemon)
                + afficher()
            }

        class Terrain implements EnsemblePokemon
            {
                - m_terrain: Pokemon[3]
                + <<Create>> Terrain()
                + ajouterPokemon(pokemon:Pokemon)
                + getPokemon(index:Integer): Pokemon
                + afficher()
                + retirerPokemon(pokemon:Pokemon)
                + getPokemonAvecLeMoinsDeVie() : Pokemon
            }

        class Pioche implements EnsemblePokemon
            {
                - m_pioche: Pokemon[*]
                + <<Create>> Pioche()
                + <<Create>> Pioche(nbpokemon:Integer)
                + ajouterPokemon(pokemon:Pokemon)
                + retirerPokemon(pokemon:Pokemon)
                + getPokemon(index:Integer): Pokemon
                + afficher()
            }
    }

    package Joueur
    {
        class Player <<Interface>>
                                {
                                    + isJoueur1() : Boolean
                                    + setJoueur1() : Boolean
                                    + getPokemonFromPioche(index:Integer) : Pokemon
                                    + piocherPokemon(pokemon:Pokemon)
                                    + placeSurTerrain(pokemon:Pokemon)
                                }
        class JoueurHumain implements Player
                    {
                        - m_nom : String
                        - m_joueur1 : Boolean
                        + <<Create>> Joueur(nom: String)
                        + getPokemonFromPioche(index:Integer) : Pokemon
                        + piocherPokemon(pokemon:Pokemon)
                        + placeSurTerrain(pokemon:Pokemon)
                        + afficherPioche()
                        + afficherMain()
                    }
        class RobotPlayer implements Player
                            {
                                - m_nom : String
                                - m_joueur1 : Boolean
                                + <<Create>> RobotPlayer(nom: String)
                                + getPokemonFromPioche(index:Integer) : Pokemon
                                + piocherPokemon(pokemon:Pokemon)
                                + placeSurTerrain(pokemon:Pokemon)
                                + afficherPioche()
                                + afficherMain()
                            }
    }

    class Pokemon
    {
        - m_nom: String
        - m_health : int
        - m_atk : int
        + <<Create>> Pokemon(nom: String)
        + attaquer()
        + getVie() : int
        + getM_attaque() : int
        + getNom() : String
        + presenter()
    }

    package Jeu
    {
        class LeJeu
        {
            - m_jHumain : JoueurHumain
            - m_jRobot : RobotPlayer
            - m_numTour : Integer
            + <<Create>> LeJeu(humain:JoueurHumain , robot : RobotPlayer)
            + launch(humain:Game.JoueurHumain)
            + mainJoueurs(tailleMain: Integer)
            + choix1erJoueur()
            + piochesJoueurs()
            + placementPokemon()
            +

        }
        abstract Affichage
        {
            + afficherJeu() : String
            + afficherMain(): String
            + afficherTerrain() : String
            + afficherPioche() : String
            +
        }
    }

}


Pioche "1" *---> "20..21\n-" Pokemon : composé de \t\t >
MainDuJoueur "1" *---> "5\n" Pokemon : composé de \t\t >
Terrain "1" *---> "3\n-" Pokemon : composé de \t\t >
Defausse "1" *---> "*\n-" Pokemon : composé de \t\t >

Player "1" *---> "1\n-m_terrain" Terrain : composé de \t\t >
Player "1" *---> "1\n-m_pioche" Pioche : composé de \t\t >
Player "1" *---> "1\n-m_main" MainDuJoueur : composé de \t\t >
Player "1" *---> "1\n-m_defausse" Defausse : composé de \t\t >
Pokemon "\n 1" *--> "1\n-m_element" Element : Possède\n\n >

Game.EnsemblePokemon.EnsemblePokemon ..> ListePokemon : <<uses>>
LeJeu ..> Player : <<uses>>
LeJeu ..> Affichage : <<uses>>



@enduml
